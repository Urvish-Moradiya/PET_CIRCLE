const Event = require('../models/EventsModel');

// GET all events
exports.getEvents = async (req, res) => {
  try {
    const events = await Event.find().sort({ date: 1 }); // Sort by date for UX
    res.status(200).json({
      status: 'success',
      data: events,
    });
  } catch (error) {
    console.error('Error fetching events:', error);
    res.status(500).json({
      status: 'error',
      message: 'Failed to fetch events',
    });
  }
};

// POST create a new event
exports.createEvent = async (req, res) => {
  try {
    const { title, type, description, date, location, image } = req.body;

    // Basic validation for required fields
    if (!title || !type || !description || !date || !location || !image) {
      return res.status(400).json({
        status: 'error',
        message: 'All fields (title, type, description, date, location, image) are required',
      });
    }

    // Create event (id is auto-generated by model)
    const event = new Event({
      title,
      type,
      description,
      date,
      location,
      image,
    });

    await event.save();

    res.status(201).json({
      status: 'success',
      data: event,
    });
  } catch (error) {
    console.error('Error creating event:', error);
    if (error.name === 'ValidationError') {
      return res.status(400).json({
        status: 'error',
        message: Object.values(error.errors).map((e) => e.message).join(', '),
      });
    }
    res.status(500).json({
      status: 'error',
      message: 'Failed to create event',
    });
  }
};

exports.deleteEvent = async (req, res) => {
  try {
    const { id } = req.params;
    const event = await Event.findOne({ id: parseInt(id) });
    if (!event) {
      return res.status(404).json({
        status: 'error',
        message: 'Event not found',
      });
    }
    await Event.deleteOne({ id: parseInt(id) });
    await Registration.deleteMany({ eventId: parseInt(id) }); // Optional: clean up registrations
    res.status(200).json({
      status: 'success',
      message: 'Event deleted successfully',
    });
  } catch (error) {
    console.error('Error deleting event:', error);
    res.status(500).json({
      status: 'error',
      message: 'Failed to delete event',
    });
  }
};